# Lexical specifications or Alphabets allowed
NL '\n'
ZERO '0'
ONE '1'

%
# Grammar that can be used
<start>		::= <bits> NL
<bits>		**= <bit>
<bit>:ZeroBit	::= ZERO
<bit>:OneBit	::= ONE
%

Start
%%%
	public String toString() {
		return bits.eval() + "";
	}
%%%

Bit
%%%
	public abstract int eval();
%%%

ZeroBit
%%%
	public int eval() {
		return 0;
	}
%%%

OneBit
%%%
	public int eval() {
		return 1;
	}
%%%

Bits
%%%
	public int eval() {
		int sum = 0;
		if (this.bitList.size() == 0) {
			throw new RuntimeException("There are no bits in the list");
		}
		for (Bit bit: this.bitList) {
			sum = sum * 2 + bit.eval();
		}
		return sum;
	}
%%%
